{"version":3,"sources":["components/ProjectItem.js","components/elements/AddButton.js","services/firebase/firebase.js","database/getUserProjects.js","services/firebase/Auth.js","components/MainMenu.js","components/elements/TextInput.js","components/elements/NewSplitButton.js","components/elements/Button.js","database/newProject.js","components/elements/FocusSplit.js","components/elements/FocusWrapper.js","components/Create.js","components/elements/FocusHeader.js","components/EditSplit.js","database/getProjectDetails.js","database/getProjectSplits.js","database/updateSplitInfo.js","components/UpdateSplit.js","database/deleteProject.js","components/DeleteProject.js","components/Focus.js","components/Header.js","components/elements/Main.js","components/elements/Container.js","components/elements/Background.js","views/Main.js","components/elements/PasswordInput.js","components/SignupForm.js","components/LoginForm.js","views/Login.js","components/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["ProjectItem","props","name","id","setScreenState","setFocusProject","useHistory","className","onClick","e","preventDefault","target","AddButton","firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getUserProjects","currentUser","a","userProjects","firestore","collection","where","get","then","querySnapshot","forEach","doc","currentProject","push","data","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","pending","setPending","useEffect","auth","onAuthStateChanged","user","Provider","value","Main","useContext","setUserProjects","uid","result","Projects","map","item","index","key","projName","TextInput","type","NewSplitButton","action","Button","text","newProject","due","splits","currentUserId","set","dueDate","element","status","FocusSplit","setSplitList","splitList","splice","parentElement","console","log","FocusWrapper","Create","current","setCurrent","listItems","htmlFor","placeholder","onChange","concat","projectName","document","getElementById","FocusHeader","setCurrentEdit","updateSplit","getProjectDetails","project","ProjectDetails","getProjectSplits","updateSplitInfo","update","UpdateSplit","splitId","focusProject","nameState","setNameState","dueState","setDueState","statusState","setStatusState","onSubmit","elements","complete","checked","deleteProject","delete","DeleteProject","deleteFromDB","Focus","setProjName","setDueDate","setSplits","currentEdit","splitsResult","split","EditSplit","Header","signOut","Container","Background","screenState","MainMenu","PasswordInput","SignupForm","email","password","createUserWithEmailAndPassword","LoginForm","signInWithEmailAndPassword","Login","currentFrom","setCurrentForm","ProtectedRoute","RouteComponent","component","rest","render","routeProps","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.35a93b27.chunk.js","sourcesContent":["import React, {useEffect} from \"react\"\nimport { useHistory } from \"react-router-dom\";\nfunction ProjectItem(props){\n    const {name} = props\n    const {id} = props\n    const {setScreenState} = props\n    const {setFocusProject} = props\n    let history = useHistory()\n    \n    const open = (e)=>{\n        e.preventDefault()\n    \n        setFocusProject(e.target.id)\n        setScreenState(\"Focus\")\n        \n    }\n    return(\n        <button id={id} className={\"projectItem\"} onClick={open}>{name}</button>\n    )\n}\nexport default ProjectItem","import React from \"react\"\nfunction AddButton(props){\n    const {setScreenState} = props\n    const changeToCreate = ()=> {setScreenState(\"Create\")}\n    return(\n        <button onClick={changeToCreate} className={\"addButton\"}>New project</button>\n           \n    )\n}\n\nexport default AddButton","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBluX_wy1ha8nvvBPCAi3M35Lhcp1T-8SA\",\n    authDomain: \"web-dev-practical-218a8.firebaseapp.com\",\n    databaseURL: \"https://web-dev-practical-218a8.firebaseio.com\",\n    projectId: \"web-dev-practical-218a8\",\n    storageBucket: \"web-dev-practical-218a8.appspot.com\",\n    messagingSenderId: \"380781875179\",\n    appId: \"1:380781875179:web:d200e6736ea5ed5b2c13ae\"\n});\nexport default firebaseApp","import firebaseApp from \"../services/firebase/firebase\"\n\nconst getUserProjects = async (currentUser) => {\n    let userProjects = [];\n    await firebaseApp\n        .firestore()\n        .collection(\"projects\")\n        .where(\"user\", \"==\", currentUser)\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                let currentProject = [];\n                currentProject.push(doc.data())\n                currentProject.push(doc.id)\n                userProjects.push(currentProject)\n            })\n        })\n    return userProjects\n\n}\nexport default getUserProjects","import React, {useState, useEffect} from \"react\";\nimport firebaseApp from \"./firebase\"\nexport const AuthContext = React.createContext();\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [pending, setPending] = useState(true);\n  \n    useEffect(() => {\n      firebaseApp.auth().onAuthStateChanged((user) => {\n        setCurrentUser(user)\n        setPending(false)\n      });\n    }, []);\n  \n    if(pending){\n      return <>Loading...</>\n    }\n  \n    return (\n      <AuthContext.Provider\n        value={{\n          currentUser\n        }}\n      >\n        {children}\n      </AuthContext.Provider>\n    );\n  };","import React, { useState, useEffect } from \"react\";\nimport ProjectItem from \"../components/ProjectItem\"\nimport AddButton from \"./elements/AddButton\"\nimport getUserProjects from \"../database/getUserProjects\"\nimport {AuthContext} from \"../services/firebase/Auth\"\nimport {useContext} from \"react\"\n\nfunction Main(props) {\n    const { setScreenState } = props\n    const { setFocusProject } = props\n    const currentUser = useContext(AuthContext)\n    const [userProjects, setUserProjects] = useState([])\n    useEffect(()=>{\n        getUserProjects(currentUser.currentUser.uid).then((result) => {\n            setUserProjects(result)\n        })\n    }, [])\n    \n    const Projects = userProjects.map((item, index) =>\n        <ProjectItem setFocusProject={setFocusProject} setScreenState={setScreenState} key={index} name={item[0].projName} id={item[1]} />)\n        \n        return (\n        <div>\n            {Projects}\n            <AddButton setScreenState={setScreenState} />\n        </div>\n\n    )\n}\nexport default Main","import React from \"react\"\nfunction TextInput(props){\n    const {id} = props;\n    return(\n        <input className={\"textInput\"} type=\"text\" id={id}/>\n    )\n}\nexport default TextInput","import React from \"react\"\n\nfunction NewSplitButton(props){\n    const {action} = props\n    return(\n        <div className={\"newSplit\"}>\n            <button onClick={action}><i className={\"fas fa-plus\"}></i></button>\n        </div>\n    )\n}\n\nexport default NewSplitButton","import React from \"react\"\nfunction Button(props) {\n    const { id } = props\n    const { action } = props\n    const { text } = props\n    return (\n        <button className={\"button\"} id={id} onClick={action}>{text}</button>\n    )\n}\nexport default Button","import firebaseApp from \"../services/firebase/firebase\"\nconst newProject = async (name, due, splits) => {\n    const currentUserId = firebaseApp.auth().currentUser.uid\n    await firebaseApp.firestore().collection(\"projects\").doc().set({\n        projName: name,\n        dueDate: due,\n        user: currentUserId\n    })\n        .then(() => {\n            firebaseApp\n                .firestore()\n                .collection(\"projects\")\n                .where(\"user\", \"==\", currentUserId)\n                .where(\"projName\", \"==\", name)\n                .get()\n                .then((querySnapshot) => {\n                    querySnapshot.forEach(function (doc) {\n                        \n                        splits.forEach(element =>\n                            firebaseApp.firestore().collection(\"projects\").doc(doc.id).collection(\"splits\").doc(element.id).set({\n                                name : element.name,\n                                due : element.due,\n                                status : element.status\n                            })\n                        );\n\n                    });\n                })\n        })\n}\n\nexport default newProject","import React from \"react\"\nfunction FocusSplit(props) {\n    const { name } = props\n    const { due } = props\n    const { id } = props\n    const {setSplitList} = props\n    const {splitList} = props\n\n    const deleteSplit = (e)=>{\n        // let newArray = splitList.splice(e.target.parentElement.id, 1);\n        setSplitList(splitList.splice(e.target.parentElement.id, 1))\n        console.log(splitList);\n        \n        // setSplitList(splitList.filter(split => !(split.id == e.target.parentElement.id)))\n    }\n\n        return (\n            <div id={id} className={\"split \"}>\n                <button onClick={deleteSplit}>{name}<br/> Due on {due}</button>\n            </div>\n        )\n\n}\nexport default FocusSplit","import React from \"react\"\nfunction FocusWrapper(props){\n    const {children} = props\n    return(\n        <div className={\"focusWrapper\"}>\n            {children}\n        </div>\n    )\n}\nexport default FocusWrapper","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TextInput from \"./elements/TextInput\"\nimport NewSplitButton from \"./elements/NewSplitButton\"\nimport Button from \"./elements/Button\"\nimport newProject from \"../database/newProject\"\nimport FocusSplit from \"./elements/FocusSplit\"\nimport FocusWrapper from \"./elements/FocusWrapper\"\nfunction Create(props) {\n    const {setScreenState} = props\n    const [splitList, setSplitList] = useState([])\n    const [current, setCurrent] = useState({ name: \"\", due: \"\", status: false})\n\n    const createProject = (e) => {\n        e.preventDefault();\n        const projectName = document.getElementById(\"projName\").value;\n        const dueDate = document.getElementById(\"dueDate\").value;\n        newProject(projectName, dueDate, splitList)\n        .then(()=>{\n            setScreenState(\"Main\")\n        })\n    }\n    const listItems = splitList.map((item, index) =>\n        <FocusSplit splitList={splitList} setSplitList={setSplitList} key={index} name={item.name} due={item.due} id={ index} />\n    )\n    const addToList = (e) => {\n        setSplitList(splitList.concat(current));\n    }\n    return (\n        <FocusWrapper>\n            <label htmlFor=\"projName\">Project Name</label>\n            <TextInput id={\"projName\"} />\n            <label htmlFor=\"dueDate\">Due date</label>\n            <input type=\"date\" id={\"dueDate\"} />\n            <div id={\"splitList\"}>\n                {listItems}\n            </div>\n            <label htmlFor=\"name\">Split name</label>\n            <input type=\"text\" placeholder=\"Name\" id=\"name\" value={current.name} onChange={(e) => setCurrent({ ...current, name: e.target.value })} />\n            <label htmlFor=\"due\">Split due date</label>\n            <input type=\"date\" id=\"due\" value={current.due} onChange={(e) => setCurrent({ ...current, due: e.target.value})} />\n            <NewSplitButton action={addToList} />\n            <Button id={\"create\"} action={createProject} text={\"Create\"} />\n        </FocusWrapper>\n    )\n}\nexport default Create","import React from \"react\"\n\nfunction FocusHeader(props) {\n    const { projName } = props;\n    const { dueDate } = props;\n\n    return (\n        <div className={\"focusHeader\"}>\n            <h3>{projName}</h3>\n            <h4>Due: {dueDate}</h4>\n        </div>\n    )\n}\nexport default FocusHeader","import React from \"react\"\nfunction FocusSplit(props) {\n    const { name } = props\n    const { due } = props\n    const { id } = props\n    const { status } = props\n    const { setCurrentEdit } = props\n\n    const updateSplit = (e) => {\n        setCurrentEdit({\n            id: e.target.id,\n            name: name,\n            due: due,\n            status: status\n        })\n    }\n    if (status) {\n        return (\n            <div  className={\"split complete\"}>\n                <button id={\"split\" + id} onClick={updateSplit}>{name}<br/> Due on {due}</button>\n            </div>)\n    }\n    else {\n        return (\n            <div className={\"split \"}>\n                <button id={\"split\" + id} onClick={updateSplit}>{name}<br/> Due on {due}</button>\n            </div>\n        )\n    }\n\n}\nexport default FocusSplit","import firebaseApp from \"../services/firebase/firebase\"\nconst getProjectDetails = async (project) => {\n    let ProjectDetails=[];\n    await firebaseApp\n        .firestore()\n        .collection(\"projects\")\n        .doc(project)\n        .get()\n        .then((doc)=>{\n            ProjectDetails.push(doc.data())\n            ProjectDetails.push(doc.id)\n        })\n\n        \n    \n    return ProjectDetails\n\n}\nexport default getProjectDetails","import firebaseApp from \"../services/firebase/firebase\"\nconst getProjectSplits = async (id)=>{\n    let splits=[]\n     await firebaseApp\n        .firestore()\n        .collection(\"projects\")\n        .doc(id)\n        .collection(\"splits\")\n        .get()\n        .then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                splits.push (doc.data())\n            })\n        })\n        \n    return splits\n}\nexport default getProjectSplits","import firebaseApp from \"../services/firebase/firebase\"\nconst updateSplitInfo = async (name, due, id, status, project) => {\n    await firebaseApp\n        .firestore()\n        .collection(\"projects\")\n        .doc(project)\n        .collection(\"splits\")\n        .doc(id)\n        .update({\n            due: due,\n            name: name,\n            status: status\n\n        })\n}\nexport default updateSplitInfo","import React, {useState} from \"react\"\nimport updateSplitInfo from \"../database/updateSplitInfo\"\nfunction UpdateSplit(props){\n    const {splitId} = props\n    const {name}= props\n    const {due} = props\n    const {setCurrentEdit} = props\n    const {status} = props\n    const {focusProject} = props\n\n    const [nameState, setNameState] = useState(name)\n    const [dueState, setDueState] = useState(due)\n    const [statusState, setStatusState] = useState(status)\n    const saveChanges = (e)=>{\n        e.preventDefault()\n        updateSplitInfo(nameState, dueState, splitId, e.target.elements.complete.checked, focusProject)\n        setCurrentEdit()\n        \n    }\n    return(\n        <form onSubmit={saveChanges}>\n            <input type=\"text\" value={nameState} onChange={(e)=> setNameState(e.target.value)}/>\n            <input type=\"date\" value={dueState} onChange={(e)=> setDueState(e.target.value)}/>\n            \n            <input type={\"checkbox\"} id={\"complete\"} checked={statusState} onChange={(e)=>setStatusState(e.target.checked)}/>\n            <label htmlFor=\"complete\">Mark as complete</label>\n            <button className={\"button\"} type={\"submit\"}>Save</button>\n        </form>\n    )\n\n}\nexport default UpdateSplit","import firebaseApp from \"../services/firebase/firebase\"\r\nconst deleteProject = async (id) => {\r\n    console.log(id)\r\n    await firebaseApp\r\n        .firestore()\r\n        .collection(\"projects\")\r\n        .doc(id)\r\n        .delete()\r\n        .then(()=>{\r\n            firebaseApp\r\n            .firestore()\r\n            .collection(\"projects\")\r\n            .doc(id)\r\n            .collection(id)\r\n            .doc(\"splits\")\r\n            .delete()\r\n        })\r\n}\r\nexport default deleteProject","import React from \"react\"\r\nimport deleteProject from \"../database/deleteProject\"\r\nfunction DeleteProject(props){\r\n    const {id} =props\r\n    const {setScreenState} = props\r\n    \r\n    const deleteFromDB = (e)=>{\r\n        \r\n        deleteProject(e).then(()=>{\r\n            setScreenState(\"Main\")\r\n        })\r\n    }\r\n\r\n    return(\r\n        <button id={id} className={\"deleteProject\"} onClick={(e)=>{deleteFromDB(e.target.id)}} >Delete</button>\r\n    )\r\n\r\n}\r\nexport default DeleteProject","import React, { useState, useEffect } from \"react\";\nimport FocusHeader from \"./elements/FocusHeader\"\nimport EditSplit from \"../components/EditSplit\"\nimport FocusWrapper from \"./elements/FocusWrapper\"\nimport getProjectDetails from \"../database/getProjectDetails\"\nimport getProjectSplits from \"../database/getProjectSplits\"\nimport UpdateSplit from \"../components/UpdateSplit\"\nimport DeleteProject from \"../components/DeleteProject\"\nfunction Focus(props) {\n    const {focusProject} = props\n    const {setScreenState} = props\n    const [projName, setProjName] = useState(\"loading\")\n    const [dueDate, setDueDate] = useState(\"loading\")\n    const [splits, setSplits] = useState([])\n    const [currentEdit, setCurrentEdit] = useState()\n    useEffect(()=>{\n        console.log(splits)\n        getProjectDetails(focusProject).then((result) => {\n            setProjName(result[0].projName)\n            setDueDate(result[0].dueDate)\n            getProjectSplits(result[1])\n            .then((splitsResult)=>{\n                setSplits(splitsResult)\n            })\n            \n        })\n    }, [currentEdit])\n    \n    const splitList = splits.map((split, index) =>\n        <EditSplit \n        status={split.status} \n        currentEdit={currentEdit} \n        setCurrentEdit={setCurrentEdit} \n        key={index} \n        name={split.name} \n        due={split.due} \n        id={index} />\n    )\n    return (\n        <FocusWrapper>\n            <FocusHeader projName={projName} dueDate={dueDate} />\n            {(currentEdit) ? <UpdateSplit focusProject={focusProject} splitId={currentEdit.id} setCurrentEdit={setCurrentEdit} name={currentEdit.name} due={currentEdit.due} status={currentEdit.status}></UpdateSplit> : \n            <div>\n                {splitList}\n            </div>\n}\n        <DeleteProject setScreenState={setScreenState} id={focusProject}/>\n        </FocusWrapper>\n    )\n}\nexport default Focus","import React from \"react\"\nimport firebaseApp from \"../services/firebase/firebase\"\nfunction Header(props) {\n    const{setScreenState} = props\n    const logout = ()=>{\n        firebaseApp\n        .auth()\n        .signOut()\n    }\n    const redirectToHome = ()=>{\n        setScreenState(\"Main\")\n    }\n    return (\n        <div className={\"header\"}>\n            <button className={\"homeButton\"} id={\"home\"} onClick={redirectToHome} ><i className={\"fas fa-home\"}></i>  </button>\n            <h1>Project planner</h1>\n            <button className={\"logoutButton\"} id={\"logout\"} onClick={logout} ><i className={\"fas fa-sign-out-alt\"}></i></button>\n            \n        </div>\n\n    )\n}\nexport default Header","import React from \"react\";\nfunction Main(props){\n    const {children} = props\n    return(\n        <div className={\"main\"}>\n            {children}\n        </div>\n    )\n}\n\nexport default Main","import React from \"react\"\nfunction Container(props){\n    const {children} = props\n    return(\n    <div className={\"container\"}>{children}</div>\n    )\n}\nexport default Container","import React from \"react\"\nfunction Background(props){\n    const {children} = props\n    return(\n    <div className={\"background\"}>{children}</div>\n    )\n}\nexport default Background","import React, { useState } from \"react\"\r\nimport MainMenu from \"../components/MainMenu\"\r\nimport Create from \"../components/Create\"\r\nimport Focus from \"../components/Focus\"\r\nimport Header from \"../components/Header\"\r\nimport MainContainer from \"../components/elements/Main\"\r\nimport Container from \"../components/elements/Container\"\r\nimport Background from \"../components/elements/Background\"\r\nfunction Main() {\r\n    const [screenState, setScreenState] = useState(\"Main\")\r\n    const [focusProject, setFocusProject] = useState(\"\")\r\n    \r\n    return (\r\n        <Background>\r\n            <Container>\r\n                <Header setScreenState={setScreenState}/>\r\n                <MainContainer>\r\n                    <div>\r\n                        {screenState == \"Create\"\r\n                        ? <Create setScreenState={setScreenState} />\r\n                        : screenState == \"Focus\"\r\n                            ? <Focus focusProject={focusProject} setScreenState={setScreenState} />\r\n                            : <MainMenu setFocusProject={setFocusProject} setScreenState={setScreenState} />\r\n                        }\r\n                    </div>\r\n                </MainContainer>\r\n            </Container>\r\n        </Background>\r\n\r\n\r\n    )\r\n}\r\nexport default Main","import React from \"react\"\nfunction PasswordInput(props){\n    const {id} = props\n    return (\n        <input type=\"password\" id={id}/>\n    )\n}\nexport default PasswordInput","import React from \"react\"\nimport TextInput from \"./elements/TextInput\"\nimport PasswordInput from \"./elements/PasswordInput\"\nimport Button from \"./elements/Button\"\nimport firebaseApp from \"../services/firebase/firebase\"\nfunction SignupForm(){\n    const handleSignup = (e)=>{\n        e.preventDefault();\n        const { email, password } = e.target.elements;\n        firebaseApp\n        .auth()\n        .createUserWithEmailAndPassword(email.value, password.value)\n\n    }\n    return(\n        <form onSubmit={handleSignup}>\n            <label htmlFor=\"email\">Email</label>\n            <TextInput id={\"email\"}/>\n            <label htmlFor=\"password\">password</label>\n            <PasswordInput id={\"password\"}/>\n            <Button id={\"singup\"} text={\"Sign up\"}></Button>\n        </form>\n    )\n}\nexport default SignupForm","import React from \"react\"\nimport TextInput from \"./elements/TextInput\"\nimport PasswordInput from \"./elements/PasswordInput\"\nimport Button from \"./elements/Button\"\nimport firebaseApp from \"../services/firebase/firebase\"\nfunction LoginForm(){\n    const handleLogin = (e)=>{\n        e.preventDefault();\n        const { email, password } = e.target.elements;\n        firebaseApp\n        .auth()\n        .signInWithEmailAndPassword(email.value, password.value);\n    }\n    return(\n        <form onSubmit={handleLogin}>\n            <label htmlFor=\"email\">Email</label>\n            <TextInput id={\"email\"}/>\n            <label htmlFor=\"password\">password</label>\n            <PasswordInput id={\"password\"}/>\n            <Button id={\"login\"} text={\"Log in\"}></Button>\n        </form>\n    )\n}\nexport default LoginForm","import React, { useState,  } from \"react\";\nimport SignupForm from \"../components/SignupForm\"\nimport LoginForm from \"../components/LoginForm\"\nimport Button from \"../components/elements/Button\"\nimport FocusWrapper from \"../components/elements/FocusWrapper\"\nimport MainContainer from \"../components/elements/Main\"\nimport Container from \"../components/elements/Container\"\nimport Background from \"../components/elements/Background\"\nfunction Login(props) {\n    const [currentFrom, setCurrentForm] = useState(null)\n    const toggleLogin = () => {\n        setCurrentForm(LoginForm)\n    }\n    const toggleSignup = () => {\n        setCurrentForm(SignupForm)\n    }\n\n    return (\n\n        <Background>\n            <Container>\n                <MainContainer>\n                    <FocusWrapper>\n                        \n                        \n                        {currentFrom ? currentFrom : <div><Button id={\"login\"} action={toggleLogin} text={\"Log in\"} />\n                        <Button id={\"signup\"} action={toggleSignup} text={\"Sign up\"} /></div>\n                        \n                        }\n                    </FocusWrapper>\n                </MainContainer>\n            </Container>\n        </Background>\n\n    )\n}\nexport default Login","import React, { useContext } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { AuthContext } from \"../services/firebase/Auth\";\nimport Login from \"../views/Login\";\n\nconst ProtectedRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Login/>\n        )\n      }\n    />\n  );\n};\n\n\nexport default ProtectedRoute","import React from 'react';\nimport {\n  Switch,\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport \"./styles/main.scss\";\nimport Main from \"./views/Main\";\nimport { AuthProvider } from \"./services/firebase/Auth\"\nimport ProtectedRoute from \"./components/ProtectedRoute\"\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <ProtectedRoute exact path=\"/\" component={Main} ></ProtectedRoute>\n        </Switch>\n      </Router>\n    </AuthProvider >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}